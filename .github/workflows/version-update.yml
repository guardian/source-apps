name: Version Update

on:
  workflow_call:
    inputs:
      script-dir:
        description: 'Path to android/config directory'
        required: false
        default: android/config
        type: string

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Establish library build Java version
        id: establish_java_for_library_build
        run: |
          if [ ! -f .tool-versions ]; then
            echo "::error title=Missing .tool-versions file::gha-gradle-library-release-workflow requires an asdf-format .tool-versions file to establish the Java version for the build."
            exit 1
          fi
          LIBRARY_BUILD_MAJOR_JAVA_VERSION=$( grep -Eo 'java [[:alnum:]-]+-[[:digit:]]+' .tool-versions | rev | cut -d'-' -f1 | rev )
          echo "Using Java $LIBRARY_BUILD_MAJOR_JAVA_VERSION"
          if [ -z "${LIBRARY_BUILD_MAJOR_JAVA_VERSION}" ]; then
            echo "::error title=Missing Java version in .tool-versions file::Could not establish the library's required Java version - the '.tool-versions' file should have a line like 'java corretto-21.0.3.9.1'."
            exit 1
          fi
          
          cat << EndOfFile >> $GITHUB_OUTPUT
          library_build_major_java_version=$LIBRARY_BUILD_MAJOR_JAVA_VERSION
          EndOfFile

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ steps.establish_java_for_library_build.outputs.library_build_major_java_version }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper

      - name: Set up Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Make updateVersion.sh executable
        run: chmod +x .github/ci-scripts/updateVersion.sh

      - name: Run updateVersion.sh
        run: .github/ci-scripts/updateVersion.sh ${{ inputs.script-dir }}

      - name: Commit version and API changes
        run: |
          git add version.txt source/api/source-api.txt
          git commit -m "chore: update version to $(cat version.txt)" || echo "No changes to commit"

      - name: Push changes
        run: git push