name: Check PR Labels

on:
  pull_request:
    types: [opened, labeled, unlabeled]

jobs:
  check-labels:
    name: Check Required Labels
    runs-on: ubuntu-latest
    steps:
      - name: Check for required labels
        id: check
        uses: actions/github-script@v6
        with:
          script: |
            const requiredLabels = ['fix', 'maintenance', 'feature', 'experiment'];
            const prLabels = context.payload.pull_request.labels.map(label => label.name);
            
            // Check if PR has at least one of the required labels
            const hasRequiredLabel = prLabels.some(label => requiredLabels.includes(label));
            
            if (!hasRequiredLabel) {
              core.setFailed(`This PR requires at least one of these labels: ${requiredLabels.join(', ')}`);
              core.setOutput('missing_label', 'true');
            } else {
              console.log(`PR has one of the required labels: ${prLabels.filter(label => requiredLabels.includes(label)).join(', ')}`);
              core.setOutput('missing_label', 'false');
            }

      - name: Comment on PR
        if: steps.check.outputs.missing_label == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ **Label Required** ⚠️\n\nPlease add one of the following labels to this PR: `fix`, `maintenance`, `feature`, or `experiment`.'
            });

      - name: Remove comment if label is present
        if: steps.check.outputs.missing_label == 'false'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Get all comments on the PR
            const comments = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            // Find and delete label reminder comments
            const reminderText = '⚠️ **Label Required** ⚠️';
            for (const comment of comments.data) {
              if (comment.body.includes(reminderText)) {
                await github.rest.issues.deleteComment({
                  comment_id: comment.id,
                  owner: context.repo.owner,
                  repo: context.repo.repo
                });
                console.log('Removed label reminder comment');
              }
            }